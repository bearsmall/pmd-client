<?xml version="1.0"?>

    <ruleset name="Error Prone"
             xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">

        <description>
            Rules to detect constructs that are either broken, extremely confusing or prone to runtime errors.
        </description>

        <rule name="SingleMethodSingleton"
          since="5.4"
          message="Class contains multiple getInstance methods. Please review."
          class="com.xy.pmd.lang.java.rule.errorprone.XYDepricatedSingleMethodSingletonRule"
          externalInfoUrl="https://pmd.github.io/pmd-6.8.0/pmd_rules_java_errorprone.html#singlemethodsingleton">
        <description>
            Some classes contain overloaded getInstance. The problem with overloaded getInstance methods
            is that the instance created using the overloaded method is not cached and so,
            for each call and new objects will be created for every invocation.
        </description>
        <priority>2</priority>
        <example>
            <![CDATA[
    public class Singleton {

        private static Singleton singleton = new Singleton( );

        private Singleton(){ }

        public static Singleton getInstance( ) {
            return singleton;
        }

        public static Singleton getInstance(Object obj){
            Singleton singleton = (Singleton) obj;
            return singleton;           //violation
        }
    }
    ]]>
        </example>
    </rule>
</ruleset>